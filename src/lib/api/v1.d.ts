/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/attendances": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["createAttendance"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/attendances/classrooms/{classroom_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllAttendances"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/attendances/{attendance_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAttendance"];
        put?: never;
        post?: never;
        delete: operations["deleteAttendance"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["logout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/refresh-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["refreshToken"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/refresh-token-ttl": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["refreshTokenTTL"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["register"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllBatches"];
        put?: never;
        post: operations["createBatch"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches/{batch_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["updateBatch"];
        post?: never;
        delete: operations["deleteBatch"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/classrooms/batches/{batch_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllClassroomWithMajors"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/excel/import": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["importData"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/latenesses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllLatenesses"];
        put?: never;
        post: operations["createLateness"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/latenesses/{lateness_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getLateness"];
        put?: never;
        post: operations["createLatenessDetail"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/majors/batch/{batch_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllMajors"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/reset": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["reset"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/students": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllStudents"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/students/classrooms/{classroom_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllStudentsByClassroomId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        CreateAttendanceItemReq: {
            note?: string;
            status?: components["schemas"]["models.AttendanceStatus"];
            student_id?: number;
        };
        CreateAttendanceReq: {
            attendance_students?: components["schemas"]["CreateAttendanceItemReq"][];
            classroom_id?: number;
            date?: string;
        };
        CreateLatenessDetailReq: {
            student_ids: number[];
        };
        CreateLatenessReq: {
            date: string;
        };
        GetAllAttendancesRes: {
            attendances: components["schemas"]["domains.Attendance"][];
        };
        GetAllLatenessesRes: {
            latenesses: components["schemas"]["domains.Lateness"][];
        };
        GetAllStudentsByClassroomIdRes: {
            students: components["schemas"]["domains.Student"][];
        };
        GetAllStudentsRes: {
            students: components["schemas"]["domains.StudentMajorClassroom"][];
        };
        GetAttendanceItemRes: {
            attendanceStudent: components["schemas"]["domains.AttendanceDetail"];
            student: components["schemas"]["domains.Student"];
        };
        GetAttendanceRes: {
            attendance: components["schemas"]["domains.Attendance"];
            items: components["schemas"]["GetAttendanceItemRes"][];
        };
        GetLatenessRes: {
            items: components["schemas"]["domains.StudentMajorClassroom"][];
            lateness: components["schemas"]["domains.Lateness"];
        };
        RefreshTokenTTLReq: {
            refresh_token?: string;
        };
        "domains.Attendance": {
            classroom_id: number;
            date: string;
            id: number;
        };
        "domains.AttendanceDetail": {
            attendance_id: number;
            id: number;
            note: string;
            status: components["schemas"]["models.AttendanceStatus"];
            student_id: number;
        };
        "domains.Batch": {
            id: number;
            name: string;
            school_id: number;
        };
        "domains.BatchInfo": {
            batch: components["schemas"]["domains.Batch"];
            classrooms_count: number;
            majors_count: number;
        };
        "domains.Classroom": {
            id: number;
            major_id: number;
            name: string;
        };
        "domains.Lateness": {
            date: string;
            id: number;
            school_id: number;
        };
        "domains.Major": {
            batch_id: number;
            id: number;
            name: string;
        };
        "domains.Student": {
            classroom_id: number;
            id: number;
            name: string;
            nis: string;
        };
        "domains.StudentMajorClassroom": {
            classroom: components["schemas"]["domains.Classroom"];
            major: components["schemas"]["domains.Major"];
            student: components["schemas"]["domains.Student"];
        };
        /** @enum {string} */
        "models.AttendanceStatus": "hadir" | "izin" | "sakit" | "alpha";
        "requests.Create": {
            name?: string;
        };
        "requests.Login": {
            /** @default email@email.com */
            email: string;
            password?: string;
        };
        "requests.Logout": {
            refresh_token: string;
        };
        "requests.RefreshToken": {
            refresh_token?: string;
        };
        "requests.Register": {
            code?: string;
            /** @default email@email.com */
            email: string;
            /** @default John Doe */
            name: string;
            /** @default password */
            password: string;
        };
        "requests.Update": {
            name?: string;
        };
        "responses.ClassroomMajor": {
            classroom: components["schemas"]["domains.Classroom"];
            major: components["schemas"]["domains.Major"];
        };
        "responses.GetAllBatches": {
            batches: components["schemas"]["domains.BatchInfo"][];
        };
        "responses.GetAllClassroomWithMajors": {
            data: components["schemas"]["responses.ClassroomMajor"][];
        };
        "responses.GetAllMajors": {
            majors: components["schemas"]["domains.Major"][];
        };
        "responses.Login": {
            access_token: string;
            refresh_token: string;
        };
        "responses.Logout": Record<string, never>;
        "responses.RefreshToken": {
            access_token: string;
            refresh_token: string;
        };
        "responses.Register": {
            access_token: string;
            refresh_token: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    createAttendance: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["CreateAttendanceReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    getAllAttendances: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Classroom Id */
                classroom_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetAllAttendancesRes"];
                };
            };
        };
    };
    getAttendance: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Attendance Id */
                attendance_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetAttendanceRes"];
                };
            };
        };
    };
    deleteAttendance: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Attendance Id */
                attendance_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Login request */
        requestBody: {
            content: {
                "*/*": components["schemas"]["requests.Login"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.Login"];
                };
            };
        };
    };
    logout: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Logout Request */
        requestBody: {
            content: {
                "*/*": components["schemas"]["requests.Logout"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.Logout"];
                };
            };
        };
    };
    refreshToken: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Refresh token req */
        requestBody: {
            content: {
                "*/*": components["schemas"]["requests.RefreshToken"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.RefreshToken"];
                };
            };
        };
    };
    refreshTokenTTL: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Refresh token req */
        requestBody: {
            content: {
                "*/*": components["schemas"]["RefreshTokenTTLReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    register: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Login request */
        requestBody: {
            content: {
                "*/*": components["schemas"]["requests.Register"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.Register"];
                };
            };
        };
    };
    getAllBatches: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.GetAllBatches"];
                };
            };
        };
    };
    createBatch: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["requests.Create"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["domains.Batch"];
                };
            };
        };
    };
    updateBatch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
            };
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["requests.Update"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["domains.Batch"];
                };
            };
        };
    };
    deleteBatch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    getAllClassroomWithMajors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Batch Id */
                batch_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.GetAllClassroomWithMajors"];
                };
            };
        };
    };
    importData: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    getAllLatenesses: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetAllLatenessesRes"];
                };
            };
        };
    };
    createLateness: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Payload */
        requestBody: {
            content: {
                "*/*": components["schemas"]["CreateLatenessReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    getLateness: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Lateness ID */
                lateness_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetLatenessRes"];
                };
            };
        };
    };
    createLatenessDetail: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Payload */
                lateness_id: number;
            };
            cookie?: never;
        };
        /** @description Payload */
        requestBody: {
            content: {
                "*/*": components["schemas"]["CreateLatenessDetailReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    getAllMajors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Batch Id */
                batch_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.GetAllMajors"];
                };
            };
        };
    };
    reset: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    getAllStudents: {
        parameters: {
            query: {
                /** @description Keyword */
                keyword: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetAllStudentsRes"];
                };
            };
        };
    };
    getAllStudentsByClassroomId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Classroom Id */
                classroom_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetAllStudentsByClassroomIdRes"];
                };
            };
        };
    };
}
