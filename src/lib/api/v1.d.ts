/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "*/*": components["schemas"]["responses.GetAllUsers"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/accounts/import": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "multipart/form-data": {
                        /**
                         * Format: binary
                         * @description file
                         */
                        file: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "*/*": components["schemas"]["responses.ImportAccounts"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/accounts/profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetAccount"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/accounts/{account_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description account id */
                    account_id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "*/*": components["schemas"]["responses.DeleteAccount"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/accounts/{account_id}/password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description account id */
                    account_id: number;
                };
                cookie?: never;
            };
            /** @description body */
            requestBody: {
                content: {
                    "*/*": components["schemas"]["requests.UpdateAccountPassword"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "*/*": components["schemas"]["responses.UpdateAccountPassword"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/accounts/{account_id}/role": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description account id */
                    account_id: number;
                };
                cookie?: never;
            };
            /** @description body */
            requestBody: {
                content: {
                    "*/*": components["schemas"]["requests.UpdateAccountRole"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "*/*": components["schemas"]["responses.UpdateAccountRole"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["logout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/refresh-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["refreshToken"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/students/accounts/{student_token_id}/eject": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description student token id */
                    student_token_id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "*/*": components["schemas"]["responses.EjectStudentToken"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/students/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["loginStudent"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/students/refresh-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["RefreshTokenStudent"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllBatches"];
        put?: never;
        post: operations["createBatch"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches/{batch_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getBatch"];
        put: operations["updateBatch"];
        post?: never;
        delete: operations["deleteBatch"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches/{batch_id}/majors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllMajorsByBatchId"];
        put?: never;
        post: operations["createMajor"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches/{batch_id}/majors/{major_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getMajor"];
        put: operations["updateMajor"];
        post?: never;
        delete: operations["deleteMajor"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches/{batch_id}/majors/{major_id}/classrooms": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllClassroomsByMajorId"];
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description batch id */
                    batch_id: number;
                    /** @description major id */
                    major_id: number;
                };
                cookie?: never;
            };
            /** @description body */
            requestBody: {
                content: {
                    "*/*": components["schemas"]["requests.CreateClassroom"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "*/*": components["schemas"]["responses.CreateClassroom"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getClassroom"];
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description batch id */
                    batch_id: number;
                    /** @description major id */
                    major_id: number;
                    /** @description classroom id */
                    classroom_id: number;
                };
                cookie?: never;
            };
            /** @description body */
            requestBody: {
                content: {
                    "*/*": components["schemas"]["requests.UpdateClassroom"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "*/*": components["schemas"]["responses.UpdateClassroom"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}/student-accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description batch id */
                    batch_id: number;
                    /** @description major id */
                    major_id: number;
                    /** @description classroom id */
                    classroom_id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "*/*": components["schemas"]["responses.GetAllStudentAccountsByClassroomId"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}/students": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllStudentsByClassroomId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}/subject-attendances": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetAllSubjectAttendances"];
        put?: never;
        post: operations["CreateSubjectAttendance"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}/subject-attendances/{subject_attendance_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetSubjectAttendance"];
        put?: never;
        post?: never;
        delete: operations["DeleteSubjectAttendance"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}/subject-attendances/{subject_attendance_id}/records": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetAllSubjectAttendanceRecords"];
        put?: never;
        post: operations["CreateSubjectAttendanceRecord"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches/{batch_id}/majors/{major_id}/classrooms/{classroom_id}/subject-attendances/{subject_attendance_id}/records/{record_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["DeleteSubjectAttendanceRecord"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/classrooms": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllClassrooms"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/classrooms/batches/{batch_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllClassroomWithMajors"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/general-attendances": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetAllGeneralAttendances"];
        put?: never;
        post: operations["CreateGeneralAttendance"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/general-attendances/records/student": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["CreateGeneralAttendanceRecordStudent"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/general-attendances/student": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetAllGeneralAttendancesStudent"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/general-attendances/{general_attendance_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetGeneralAttendance"];
        put?: never;
        post?: never;
        delete: operations["deleteGeneralAttendance"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/general-attendances/{general_attendance_id}/classrooms/{classroom_id}/records": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetAllGeneralAttendanceRecordsByClassroomId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/general-attendances/{general_attendance_id}/records": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetAllGeneralAttendanceRecords"];
        put?: never;
        post: operations["CreateGeneralAttendanceRecord"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/general-attendances/{general_attendance_id}/records/{record_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["DeleteGeneralAttendanceRecord"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/general_attendances/{general_attendance_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["updateGeneralAttendance"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/majors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllMajors"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/reset": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["reset"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/schools/profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetSchool"];
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description body */
            requestBody: {
                content: {
                    "*/*": components["schemas"]["requests.UpdateSchool"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "*/*": components["schemas"]["responses.UpdateSchool"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/students/profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetProfileStudent"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/subject-attendances/records/student": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["CreateSubjectAttendanceRecordStudent"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/subject-attendances/student": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetAllSubjectAttendancesStudent"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/subjects": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllSubjects"];
        put?: never;
        post: operations["createSubject"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/subjects/{subject_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetSubject"];
        put: operations["updateSubject"];
        post?: never;
        delete: operations["deleteSubject"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        CreateGeneralAttendanceRecordReq: {
            datetime: string;
            status: components["schemas"]["constants.AttendanceStatus"];
            student_id: number;
        };
        CreateGeneralAttendanceRecordStudentReq: {
            code: string;
        };
        CreateGeneralAttendanceReq: {
            datetime?: string;
            note?: string;
        };
        CreateSubjectAttendanceRecordReq: {
            status: components["schemas"]["constants.AttendanceStatusType"];
            student_id: number;
        };
        CreateSubjectAttendanceRecordStudentReq: {
            code: string;
        };
        CreateSubjectAttendanceReq: {
            datetime: string;
            note: string;
            subject_id: number;
        };
        GeneralAttendance: {
            code: string;
            creator_id: number;
            datetime: string;
            id: number;
            note: string;
            school_id: number;
        };
        GetAccountRes: {
            user: components["schemas"]["User"];
        };
        GetAllBatchesItem: {
            batch: components["schemas"]["batch"];
            major_count: number;
        };
        GetAllBatchesRes: {
            items: components["schemas"]["GetAllBatchesItem"][];
        };
        GetAllClassroomsByMajorIdItem: {
            classroom: components["schemas"]["classroom"];
            student_count: number;
        };
        GetAllClassroomsByMajorIdRes: {
            items: components["schemas"]["GetAllClassroomsByMajorIdItem"][];
        };
        GetAllGeneralAttendanceRecordsByClassroomIdItem: {
            record: components["schemas"]["domains.GeneralAttendanceRecord"];
            student: components["schemas"]["Student"];
        };
        GetAllGeneralAttendanceRecordsByClassroomIdRes: {
            items: components["schemas"]["GetAllGeneralAttendanceRecordsByClassroomIdItem"][];
        };
        GetAllGeneralAttendanceRecordsItem: {
            record: components["schemas"]["domains.GeneralAttendanceRecord"];
            student: components["schemas"]["Student"];
        };
        GetAllGeneralAttendancesItem: {
            creator: components["schemas"]["User"];
            general_attendance: components["schemas"]["GeneralAttendance"];
        };
        GetAllGeneralAttendancesRes: {
            items: components["schemas"]["GetAllGeneralAttendancesItem"][];
        };
        GetAllGeneralAttendancesStudentItem: {
            general_attendance: components["schemas"]["GeneralAttendance"];
            general_attendance_record: components["schemas"]["domains.GeneralAttendanceRecord"];
        };
        GetAllGeneralAttendancesStudentRes: {
            items: components["schemas"]["GetAllGeneralAttendancesStudentItem"][];
        };
        GetAllMajorsByBatchIdItem: {
            classroom_count: number;
            major: components["schemas"]["major"];
        };
        GetAllMajorsByBatchIdRes: {
            items: components["schemas"]["GetAllMajorsByBatchIdItem"][];
        };
        GetAllStudentsByClassroomIdRes: {
            students: components["schemas"]["Student"][];
        };
        GetAllSubjectAttendanceRecordsItem: {
            record: components["schemas"]["domains.SubjectAttendanceRecord"];
            student: components["schemas"]["Student"];
        };
        GetAllSubjectAttendancesItem: {
            creator: components["schemas"]["User"];
            subject: components["schemas"]["Subject"];
            subject_attendance: components["schemas"]["SubjectAttendance"];
        };
        GetAllSubjectAttendancesRes: {
            items: components["schemas"]["GetAllSubjectAttendancesItem"][];
        };
        GetAllSubjectAttendancesStudentItem: {
            creator: components["schemas"]["User"];
            subject: components["schemas"]["Subject"];
            subject_attendance: components["schemas"]["SubjectAttendance"];
            subject_attendance_record: components["schemas"]["domains.SubjectAttendanceRecord"];
        };
        GetAllSubjectAttendancesStudentRes: {
            items: components["schemas"]["GetAllSubjectAttendancesStudentItem"][];
        };
        GetBatchRes: {
            batch: components["schemas"]["batch"];
        };
        GetClassroomRes: {
            classroom: components["schemas"]["classroom"];
        };
        GetGeneralAttendanceRes: {
            creator: components["schemas"]["User"];
            general_attendance: components["schemas"]["GeneralAttendance"];
        };
        GetMajorRes: {
            major: components["schemas"]["major"];
        };
        GetProfileStudentRes: {
            batch: components["schemas"]["batch"];
            classroom: components["schemas"]["classroom"];
            major: components["schemas"]["major"];
            school: components["schemas"]["School"];
            student: components["schemas"]["Student"];
        };
        GetSchoolRes: {
            school: components["schemas"]["School"];
        };
        GetSubjectAttendanceRes: {
            creator: components["schemas"]["User"];
            subject_attendance: components["schemas"]["SubjectAttendance"];
        };
        GetSubjectRes: {
            subject: components["schemas"]["Subject"];
        };
        LoginReq: {
            /** @default email@email.com */
            email: string;
            password?: string;
        };
        LoginRes: {
            access_token: string;
            refresh_token: string;
        };
        LoginStudentReq: {
            device_id: string;
            nis: string;
            school_code: string;
        };
        LoginStudentRes: {
            access_token: string;
            refresh_token: string;
        };
        LogoutReq: {
            refresh_token: string;
        };
        RefreshTokenReq: {
            refresh_token?: string;
        };
        RefreshTokenRes: {
            access_token: string;
            refresh_token: string;
        };
        RefreshTokenStudentReq: {
            refresh_token: string;
        };
        RefreshTokenStudentRes: {
            access_token: string;
            refresh_token: string;
        };
        School: {
            code: string;
            id: number;
            name: string;
        };
        Student: {
            classroom_id: number;
            id: number;
            name: string;
            nis: string;
            school_id: number;
        };
        Subject: {
            id: number;
            name: string;
            school_id: number;
        };
        SubjectAttendance: {
            classroom_id: number;
            code: string;
            creator_id: number;
            date_time: string;
            id: number;
            note: string;
            subject_id: number;
        };
        User: {
            email: string;
            id: number;
            name: string;
            password: string;
            role: string;
            school_id: number;
        };
        batch: {
            id: number;
            name: string;
            school_id: number;
        };
        classroom: {
            id: number;
            major_id: number;
            name: string;
        };
        /** @enum {string} */
        "constants.AttendanceStatus": "hadir" | "alpha" | "sakit" | "izin";
        /** @enum {string} */
        "constants.AttendanceStatusType": "present-on-time" | "present-late" | "sick" | "permission" | "alpha";
        "domains.GeneralAttendanceRecord": {
            date_time: string;
            general_attendance_id: number;
            id: number;
            status: components["schemas"]["constants.AttendanceStatus"];
            student_id: number;
        };
        "domains.StudentToken": {
            device_id: string;
            id: number;
            refresh_token: string;
            student_id: number;
            ttl: string;
        };
        "domains.SubjectAttendanceRecord": {
            date_time: string;
            id: number;
            status: components["schemas"]["constants.AttendanceStatus"];
            student_id: number;
            subject_attendance_id: number;
        };
        "dto.StudentAccount": {
            student: components["schemas"]["Student"];
            student_token: components["schemas"]["domains.StudentToken"];
        };
        major: {
            batch_id: number;
            id: number;
            name: string;
        };
        "requests.CreateBatch": {
            name?: string;
        };
        "requests.CreateClassroom": {
            name: string;
        };
        "requests.CreateMajor": {
            name: string;
        };
        "requests.CreateSubject": {
            name: string;
        };
        "requests.UpdateAccountPassword": {
            password: string;
        };
        "requests.UpdateAccountRole": {
            role: string;
        };
        "requests.UpdateBatch": {
            name?: string;
        };
        "requests.UpdateClassroom": {
            name: string;
        };
        "requests.UpdateGeneralAttendance": {
            datetime?: string;
            note?: string;
        };
        "requests.UpdateMajor": {
            name: string;
        };
        "requests.UpdateSchool": {
            code: string;
            name: string;
        };
        "requests.UpdateSubject": {
            name: string;
        };
        "responses.ClassroomMajor": {
            classroom: components["schemas"]["classroom"];
            major: components["schemas"]["major"];
        };
        "responses.CreateClassroom": {
            classroom: components["schemas"]["classroom"];
        };
        "responses.CreateGeneralAttendance": {
            general_attendance: components["schemas"]["GeneralAttendance"];
        };
        "responses.CreateGeneralAttendanceRecord": {
            general_attendance_record: components["schemas"]["domains.GeneralAttendanceRecord"];
        };
        "responses.CreateGeneralAttendanceRecordStudent": {
            message: string;
        };
        "responses.CreateSubject": {
            subject: components["schemas"]["Subject"];
        };
        "responses.CreateSubjectAttendance": {
            subject_attendance: components["schemas"]["SubjectAttendance"];
        };
        "responses.CreateSubjectAttendanceRecord": {
            subject_attendance_record: components["schemas"]["domains.SubjectAttendanceRecord"];
        };
        "responses.CreateSubjectAttendanceRecordStudent": {
            message: string;
        };
        "responses.DeleteAccount": {
            message: string;
        };
        "responses.DeleteGeneralAttendance": {
            message?: string;
        };
        "responses.DeleteGeneralAttendanceRecord": {
            message?: string;
        };
        "responses.DeleteSubject": {
            message: string;
        };
        "responses.DeleteSubjectAttendance": {
            message: string;
        };
        "responses.DeleteSubjectAttendanceRecord": {
            message: string;
        };
        "responses.EjectStudentToken": {
            message: string;
        };
        "responses.GetAll": {
            classrooms: components["schemas"]["classroom"][];
        };
        "responses.GetAllClassroomWithMajors": {
            data: components["schemas"]["responses.ClassroomMajor"][];
        };
        "responses.GetAllGeneralAttendanceRecords": {
            items: components["schemas"]["GetAllGeneralAttendanceRecordsItem"][];
        };
        "responses.GetAllStudentAccountsByClassroomId": {
            items: components["schemas"]["dto.StudentAccount"][];
        };
        "responses.GetAllSubjectAttendanceRecords": {
            items: components["schemas"]["GetAllSubjectAttendanceRecordsItem"][];
        };
        "responses.GetAllSubjects": {
            subjects: components["schemas"]["Subject"][];
        };
        "responses.GetAllUsers": {
            users: components["schemas"]["User"][];
        };
        "responses.ImportAccounts": {
            message: string;
        };
        "responses.Logout": {
            message: string;
        };
        "responses.UpdateAccountPassword": {
            user: components["schemas"]["User"];
        };
        "responses.UpdateAccountRole": {
            user: components["schemas"]["User"];
        };
        "responses.UpdateClassroom": {
            classroom: components["schemas"]["classroom"];
        };
        "responses.UpdateGeneralAttendance": {
            general_attendance: components["schemas"]["GeneralAttendance"];
        };
        "responses.UpdateSchool": {
            school: components["schemas"]["School"];
        };
        "responses.UpdateSubject": {
            subject: components["schemas"]["Subject"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    GetAccount: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetAccountRes"];
                };
            };
        };
    };
    login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["LoginReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LoginRes"];
                };
            };
        };
    };
    logout: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Logout Request */
        requestBody: {
            content: {
                "*/*": components["schemas"]["LogoutReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.Logout"];
                };
            };
        };
    };
    refreshToken: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["RefreshTokenReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RefreshTokenRes"];
                };
            };
        };
    };
    loginStudent: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["LoginStudentReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LoginStudentRes"];
                };
            };
        };
    };
    RefreshTokenStudent: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["RefreshTokenStudentReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RefreshTokenStudentRes"];
                };
            };
        };
    };
    getAllBatches: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetAllBatchesRes"];
                };
            };
        };
    };
    createBatch: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["requests.CreateBatch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["batch"];
                };
            };
        };
    };
    getBatch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetBatchRes"];
                };
            };
        };
    };
    updateBatch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
            };
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["requests.UpdateBatch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["batch"];
                };
            };
        };
    };
    deleteBatch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    getAllMajorsByBatchId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetAllMajorsByBatchIdRes"];
                };
            };
        };
    };
    createMajor: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
            };
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["requests.CreateMajor"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["major"];
                };
            };
        };
    };
    getMajor: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
                /** @description major id */
                major_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetMajorRes"];
                };
            };
        };
    };
    updateMajor: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
                /** @description major id */
                major_id: number;
            };
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["requests.UpdateMajor"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["major"];
                };
            };
        };
    };
    deleteMajor: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
                /** @description major id */
                major_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    getAllClassroomsByMajorId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
                /** @description major id */
                major_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetAllClassroomsByMajorIdRes"];
                };
            };
        };
    };
    getClassroom: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
                /** @description major id */
                major_id: number;
                /** @description classroom id */
                classroom_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetClassroomRes"];
                };
            };
        };
    };
    getAllStudentsByClassroomId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
                /** @description major id */
                major_id: number;
                /** @description classroom id */
                classroom_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetAllStudentsByClassroomIdRes"];
                };
            };
        };
    };
    GetAllSubjectAttendances: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
                /** @description major id */
                major_id: number;
                /** @description classroom id */
                classroom_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetAllSubjectAttendancesRes"];
                };
            };
        };
    };
    CreateSubjectAttendance: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
                /** @description major id */
                major_id: number;
                /** @description classroom id */
                classroom_id: number;
            };
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["CreateSubjectAttendanceReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.CreateSubjectAttendance"];
                };
            };
        };
    };
    GetSubjectAttendance: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
                /** @description major id */
                major_id: number;
                /** @description classroom id */
                classroom_id: number;
                /** @description subject attendance id */
                subject_attendance_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetSubjectAttendanceRes"];
                };
            };
        };
    };
    DeleteSubjectAttendance: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
                /** @description major id */
                major_id: number;
                /** @description classroom id */
                classroom_id: number;
                /** @description subject attendance id */
                subject_attendance_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.DeleteSubjectAttendance"];
                };
            };
        };
    };
    GetAllSubjectAttendanceRecords: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
                /** @description major id */
                major_id: number;
                /** @description classroom id */
                classroom_id: number;
                /** @description subject attendance id */
                subject_attendance_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.GetAllSubjectAttendanceRecords"];
                };
            };
        };
    };
    CreateSubjectAttendanceRecord: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
                /** @description major id */
                major_id: number;
                /** @description classroom id */
                classroom_id: number;
                /** @description subject attendance id */
                subject_attendance_id: number;
            };
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["CreateSubjectAttendanceRecordReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.CreateSubjectAttendanceRecord"];
                };
            };
        };
    };
    DeleteSubjectAttendanceRecord: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description batch id */
                batch_id: number;
                /** @description major id */
                major_id: number;
                /** @description classroom id */
                classroom_id: number;
                /** @description subject attendance id */
                subject_attendance_id: number;
                /** @description record id */
                record_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.DeleteSubjectAttendanceRecord"];
                };
            };
        };
    };
    getAllClassrooms: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.GetAll"];
                };
            };
        };
    };
    getAllClassroomWithMajors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Batch Id */
                batch_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.GetAllClassroomWithMajors"];
                };
            };
        };
    };
    GetAllGeneralAttendances: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetAllGeneralAttendancesRes"];
                };
            };
        };
    };
    CreateGeneralAttendance: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["CreateGeneralAttendanceReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.CreateGeneralAttendance"];
                };
            };
        };
    };
    CreateGeneralAttendanceRecordStudent: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["CreateGeneralAttendanceRecordStudentReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.CreateGeneralAttendanceRecordStudent"];
                };
            };
        };
    };
    GetAllGeneralAttendancesStudent: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetAllGeneralAttendancesStudentRes"];
                };
            };
        };
    };
    GetGeneralAttendance: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description general attendance id */
                general_attendance_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetGeneralAttendanceRes"];
                };
            };
        };
    };
    deleteGeneralAttendance: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description general attendance id */
                general_attendance_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.DeleteGeneralAttendance"];
                };
            };
        };
    };
    GetAllGeneralAttendanceRecordsByClassroomId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description general attendance id */
                general_attendance_id: number;
                /** @description classroom id */
                classroom_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetAllGeneralAttendanceRecordsByClassroomIdRes"];
                };
            };
        };
    };
    GetAllGeneralAttendanceRecords: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description general attendance id */
                general_attendance_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.GetAllGeneralAttendanceRecords"];
                };
            };
        };
    };
    CreateGeneralAttendanceRecord: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description general attendance id */
                general_attendance_id: number;
            };
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["CreateGeneralAttendanceRecordReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.CreateGeneralAttendanceRecord"];
                };
            };
        };
    };
    DeleteGeneralAttendanceRecord: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description general attendance id */
                general_attendance_id: number;
                /** @description record id */
                record_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.DeleteGeneralAttendanceRecord"];
                };
            };
        };
    };
    updateGeneralAttendance: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description general attendance id */
                general_attendance_id: number;
            };
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["requests.UpdateGeneralAttendance"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.UpdateGeneralAttendance"];
                };
            };
        };
    };
    getAllMajors: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["major"][];
                };
            };
        };
    };
    reset: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    GetSchool: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetSchoolRes"];
                };
            };
        };
    };
    GetProfileStudent: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetProfileStudentRes"];
                };
            };
        };
    };
    CreateSubjectAttendanceRecordStudent: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["CreateSubjectAttendanceRecordStudentReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.CreateSubjectAttendanceRecordStudent"];
                };
            };
        };
    };
    GetAllSubjectAttendancesStudent: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetAllSubjectAttendancesStudentRes"];
                };
            };
        };
    };
    getAllSubjects: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.GetAllSubjects"];
                };
            };
        };
    };
    createSubject: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["requests.CreateSubject"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.CreateSubject"];
                };
            };
        };
    };
    GetSubject: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subject id */
                subject_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GetSubjectRes"];
                };
            };
        };
    };
    updateSubject: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subject id */
                subject_id: number;
            };
            cookie?: never;
        };
        /** @description body */
        requestBody: {
            content: {
                "*/*": components["schemas"]["requests.UpdateSubject"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.UpdateSubject"];
                };
            };
        };
    };
    deleteSubject: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subject id */
                subject_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["responses.DeleteSubject"];
                };
            };
        };
    };
}
