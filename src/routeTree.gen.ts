/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as AuthenticatedTeacherManagementIndexRouteImport } from './routes/_authenticated/teacher-management/index'
import { Route as AuthenticatedSubjectManagementIndexRouteImport } from './routes/_authenticated/subject-management/index'
import { Route as AuthenticatedStudentAccountManagementIndexRouteImport } from './routes/_authenticated/student-account-management/index'
import { Route as AuthenticatedSettingIndexRouteImport } from './routes/_authenticated/setting/index'
import { Route as AuthenticatedSchoolManagementIndexRouteImport } from './routes/_authenticated/school-management/index'
import { Route as AuthenticatedDataManagementBatchesIndexRouteImport } from './routes/_authenticated/data-management/batches/index'
import { Route as AuthenticatedAttendanceSubjectIndexRouteImport } from './routes/_authenticated/attendance/subject/index'
import { Route as AuthenticatedAttendanceGeneralIndexRouteImport } from './routes/_authenticated/attendance/general/index'
import { Route as AuthAuthLoginIndexRouteImport } from './routes/_auth/auth.login/index'
import { Route as AuthenticatedAttendanceSubjectSubjectAttendanceIdIndexRouteImport } from './routes/_authenticated/attendance/subject/$subjectAttendanceId/index'
import { Route as AuthenticatedAttendanceGeneralGeneralAttendanceIdIndexRouteImport } from './routes/_authenticated/attendance/general/$generalAttendanceId/index'
import { Route as AuthenticatedDataManagementBatchesBatchIdMajorsIndexRouteImport } from './routes/_authenticated/data-management/batches/$batchId.majors/index'
import { Route as AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsIndexRouteImport } from './routes/_authenticated/data-management/batches/$batchId.majors/$majorId.classrooms/index'
import { Route as AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsClassroomIdStudentsIndexRouteImport } from './routes/_authenticated/data-management/batches/$batchId.majors/$majorId.classrooms/$classroomId.students/index'

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedTeacherManagementIndexRoute =
  AuthenticatedTeacherManagementIndexRouteImport.update({
    id: '/teacher-management/',
    path: '/teacher-management/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedSubjectManagementIndexRoute =
  AuthenticatedSubjectManagementIndexRouteImport.update({
    id: '/subject-management/',
    path: '/subject-management/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedStudentAccountManagementIndexRoute =
  AuthenticatedStudentAccountManagementIndexRouteImport.update({
    id: '/student-account-management/',
    path: '/student-account-management/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedSettingIndexRoute =
  AuthenticatedSettingIndexRouteImport.update({
    id: '/setting/',
    path: '/setting/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedSchoolManagementIndexRoute =
  AuthenticatedSchoolManagementIndexRouteImport.update({
    id: '/school-management/',
    path: '/school-management/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedDataManagementBatchesIndexRoute =
  AuthenticatedDataManagementBatchesIndexRouteImport.update({
    id: '/data-management/batches/',
    path: '/data-management/batches/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAttendanceSubjectIndexRoute =
  AuthenticatedAttendanceSubjectIndexRouteImport.update({
    id: '/attendance/subject/',
    path: '/attendance/subject/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAttendanceGeneralIndexRoute =
  AuthenticatedAttendanceGeneralIndexRouteImport.update({
    id: '/attendance/general/',
    path: '/attendance/general/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthAuthLoginIndexRoute = AuthAuthLoginIndexRouteImport.update({
  id: '/auth/login/',
  path: '/auth/login/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthenticatedAttendanceSubjectSubjectAttendanceIdIndexRoute =
  AuthenticatedAttendanceSubjectSubjectAttendanceIdIndexRouteImport.update({
    id: '/attendance/subject/$subjectAttendanceId/',
    path: '/attendance/subject/$subjectAttendanceId/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAttendanceGeneralGeneralAttendanceIdIndexRoute =
  AuthenticatedAttendanceGeneralGeneralAttendanceIdIndexRouteImport.update({
    id: '/attendance/general/$generalAttendanceId/',
    path: '/attendance/general/$generalAttendanceId/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedDataManagementBatchesBatchIdMajorsIndexRoute =
  AuthenticatedDataManagementBatchesBatchIdMajorsIndexRouteImport.update({
    id: '/data-management/batches/$batchId/majors/',
    path: '/data-management/batches/$batchId/majors/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsIndexRoute =
  AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsIndexRouteImport.update(
    {
      id: '/data-management/batches/$batchId/majors/$majorId/classrooms/',
      path: '/data-management/batches/$batchId/majors/$majorId/classrooms/',
      getParentRoute: () => AuthenticatedRoute,
    } as any,
  )
const AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsClassroomIdStudentsIndexRoute =
  AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsClassroomIdStudentsIndexRouteImport.update(
    {
      id: '/data-management/batches/$batchId/majors/$majorId/classrooms/$classroomId/students/',
      path: '/data-management/batches/$batchId/majors/$majorId/classrooms/$classroomId/students/',
      getParentRoute: () => AuthenticatedRoute,
    } as any,
  )

export interface FileRoutesByFullPath {
  '/': typeof AuthenticatedIndexRoute
  '/school-management': typeof AuthenticatedSchoolManagementIndexRoute
  '/setting': typeof AuthenticatedSettingIndexRoute
  '/student-account-management': typeof AuthenticatedStudentAccountManagementIndexRoute
  '/subject-management': typeof AuthenticatedSubjectManagementIndexRoute
  '/teacher-management': typeof AuthenticatedTeacherManagementIndexRoute
  '/auth/login': typeof AuthAuthLoginIndexRoute
  '/attendance/general': typeof AuthenticatedAttendanceGeneralIndexRoute
  '/attendance/subject': typeof AuthenticatedAttendanceSubjectIndexRoute
  '/data-management/batches': typeof AuthenticatedDataManagementBatchesIndexRoute
  '/attendance/general/$generalAttendanceId': typeof AuthenticatedAttendanceGeneralGeneralAttendanceIdIndexRoute
  '/attendance/subject/$subjectAttendanceId': typeof AuthenticatedAttendanceSubjectSubjectAttendanceIdIndexRoute
  '/data-management/batches/$batchId/majors': typeof AuthenticatedDataManagementBatchesBatchIdMajorsIndexRoute
  '/data-management/batches/$batchId/majors/$majorId/classrooms': typeof AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsIndexRoute
  '/data-management/batches/$batchId/majors/$majorId/classrooms/$classroomId/students': typeof AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsClassroomIdStudentsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof AuthenticatedIndexRoute
  '/school-management': typeof AuthenticatedSchoolManagementIndexRoute
  '/setting': typeof AuthenticatedSettingIndexRoute
  '/student-account-management': typeof AuthenticatedStudentAccountManagementIndexRoute
  '/subject-management': typeof AuthenticatedSubjectManagementIndexRoute
  '/teacher-management': typeof AuthenticatedTeacherManagementIndexRoute
  '/auth/login': typeof AuthAuthLoginIndexRoute
  '/attendance/general': typeof AuthenticatedAttendanceGeneralIndexRoute
  '/attendance/subject': typeof AuthenticatedAttendanceSubjectIndexRoute
  '/data-management/batches': typeof AuthenticatedDataManagementBatchesIndexRoute
  '/attendance/general/$generalAttendanceId': typeof AuthenticatedAttendanceGeneralGeneralAttendanceIdIndexRoute
  '/attendance/subject/$subjectAttendanceId': typeof AuthenticatedAttendanceSubjectSubjectAttendanceIdIndexRoute
  '/data-management/batches/$batchId/majors': typeof AuthenticatedDataManagementBatchesBatchIdMajorsIndexRoute
  '/data-management/batches/$batchId/majors/$majorId/classrooms': typeof AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsIndexRoute
  '/data-management/batches/$batchId/majors/$majorId/classrooms/$classroomId/students': typeof AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsClassroomIdStudentsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/school-management/': typeof AuthenticatedSchoolManagementIndexRoute
  '/_authenticated/setting/': typeof AuthenticatedSettingIndexRoute
  '/_authenticated/student-account-management/': typeof AuthenticatedStudentAccountManagementIndexRoute
  '/_authenticated/subject-management/': typeof AuthenticatedSubjectManagementIndexRoute
  '/_authenticated/teacher-management/': typeof AuthenticatedTeacherManagementIndexRoute
  '/_auth/auth/login/': typeof AuthAuthLoginIndexRoute
  '/_authenticated/attendance/general/': typeof AuthenticatedAttendanceGeneralIndexRoute
  '/_authenticated/attendance/subject/': typeof AuthenticatedAttendanceSubjectIndexRoute
  '/_authenticated/data-management/batches/': typeof AuthenticatedDataManagementBatchesIndexRoute
  '/_authenticated/attendance/general/$generalAttendanceId/': typeof AuthenticatedAttendanceGeneralGeneralAttendanceIdIndexRoute
  '/_authenticated/attendance/subject/$subjectAttendanceId/': typeof AuthenticatedAttendanceSubjectSubjectAttendanceIdIndexRoute
  '/_authenticated/data-management/batches/$batchId/majors/': typeof AuthenticatedDataManagementBatchesBatchIdMajorsIndexRoute
  '/_authenticated/data-management/batches/$batchId/majors/$majorId/classrooms/': typeof AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsIndexRoute
  '/_authenticated/data-management/batches/$batchId/majors/$majorId/classrooms/$classroomId/students/': typeof AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsClassroomIdStudentsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/school-management'
    | '/setting'
    | '/student-account-management'
    | '/subject-management'
    | '/teacher-management'
    | '/auth/login'
    | '/attendance/general'
    | '/attendance/subject'
    | '/data-management/batches'
    | '/attendance/general/$generalAttendanceId'
    | '/attendance/subject/$subjectAttendanceId'
    | '/data-management/batches/$batchId/majors'
    | '/data-management/batches/$batchId/majors/$majorId/classrooms'
    | '/data-management/batches/$batchId/majors/$majorId/classrooms/$classroomId/students'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/school-management'
    | '/setting'
    | '/student-account-management'
    | '/subject-management'
    | '/teacher-management'
    | '/auth/login'
    | '/attendance/general'
    | '/attendance/subject'
    | '/data-management/batches'
    | '/attendance/general/$generalAttendanceId'
    | '/attendance/subject/$subjectAttendanceId'
    | '/data-management/batches/$batchId/majors'
    | '/data-management/batches/$batchId/majors/$majorId/classrooms'
    | '/data-management/batches/$batchId/majors/$majorId/classrooms/$classroomId/students'
  id:
    | '__root__'
    | '/_auth'
    | '/_authenticated'
    | '/_authenticated/'
    | '/_authenticated/school-management/'
    | '/_authenticated/setting/'
    | '/_authenticated/student-account-management/'
    | '/_authenticated/subject-management/'
    | '/_authenticated/teacher-management/'
    | '/_auth/auth/login/'
    | '/_authenticated/attendance/general/'
    | '/_authenticated/attendance/subject/'
    | '/_authenticated/data-management/batches/'
    | '/_authenticated/attendance/general/$generalAttendanceId/'
    | '/_authenticated/attendance/subject/$subjectAttendanceId/'
    | '/_authenticated/data-management/batches/$batchId/majors/'
    | '/_authenticated/data-management/batches/$batchId/majors/$majorId/classrooms/'
    | '/_authenticated/data-management/batches/$batchId/majors/$majorId/classrooms/$classroomId/students/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/teacher-management/': {
      id: '/_authenticated/teacher-management/'
      path: '/teacher-management'
      fullPath: '/teacher-management'
      preLoaderRoute: typeof AuthenticatedTeacherManagementIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/subject-management/': {
      id: '/_authenticated/subject-management/'
      path: '/subject-management'
      fullPath: '/subject-management'
      preLoaderRoute: typeof AuthenticatedSubjectManagementIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/student-account-management/': {
      id: '/_authenticated/student-account-management/'
      path: '/student-account-management'
      fullPath: '/student-account-management'
      preLoaderRoute: typeof AuthenticatedStudentAccountManagementIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/setting/': {
      id: '/_authenticated/setting/'
      path: '/setting'
      fullPath: '/setting'
      preLoaderRoute: typeof AuthenticatedSettingIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/school-management/': {
      id: '/_authenticated/school-management/'
      path: '/school-management'
      fullPath: '/school-management'
      preLoaderRoute: typeof AuthenticatedSchoolManagementIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/data-management/batches/': {
      id: '/_authenticated/data-management/batches/'
      path: '/data-management/batches'
      fullPath: '/data-management/batches'
      preLoaderRoute: typeof AuthenticatedDataManagementBatchesIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/attendance/subject/': {
      id: '/_authenticated/attendance/subject/'
      path: '/attendance/subject'
      fullPath: '/attendance/subject'
      preLoaderRoute: typeof AuthenticatedAttendanceSubjectIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/attendance/general/': {
      id: '/_authenticated/attendance/general/'
      path: '/attendance/general'
      fullPath: '/attendance/general'
      preLoaderRoute: typeof AuthenticatedAttendanceGeneralIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_auth/auth/login/': {
      id: '/_auth/auth/login/'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLoginIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_authenticated/attendance/subject/$subjectAttendanceId/': {
      id: '/_authenticated/attendance/subject/$subjectAttendanceId/'
      path: '/attendance/subject/$subjectAttendanceId'
      fullPath: '/attendance/subject/$subjectAttendanceId'
      preLoaderRoute: typeof AuthenticatedAttendanceSubjectSubjectAttendanceIdIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/attendance/general/$generalAttendanceId/': {
      id: '/_authenticated/attendance/general/$generalAttendanceId/'
      path: '/attendance/general/$generalAttendanceId'
      fullPath: '/attendance/general/$generalAttendanceId'
      preLoaderRoute: typeof AuthenticatedAttendanceGeneralGeneralAttendanceIdIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/data-management/batches/$batchId/majors/': {
      id: '/_authenticated/data-management/batches/$batchId/majors/'
      path: '/data-management/batches/$batchId/majors'
      fullPath: '/data-management/batches/$batchId/majors'
      preLoaderRoute: typeof AuthenticatedDataManagementBatchesBatchIdMajorsIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/data-management/batches/$batchId/majors/$majorId/classrooms/': {
      id: '/_authenticated/data-management/batches/$batchId/majors/$majorId/classrooms/'
      path: '/data-management/batches/$batchId/majors/$majorId/classrooms'
      fullPath: '/data-management/batches/$batchId/majors/$majorId/classrooms'
      preLoaderRoute: typeof AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/data-management/batches/$batchId/majors/$majorId/classrooms/$classroomId/students/': {
      id: '/_authenticated/data-management/batches/$batchId/majors/$majorId/classrooms/$classroomId/students/'
      path: '/data-management/batches/$batchId/majors/$majorId/classrooms/$classroomId/students'
      fullPath: '/data-management/batches/$batchId/majors/$majorId/classrooms/$classroomId/students'
      preLoaderRoute: typeof AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsClassroomIdStudentsIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthRouteChildren {
  AuthAuthLoginIndexRoute: typeof AuthAuthLoginIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthLoginIndexRoute: AuthAuthLoginIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface AuthenticatedRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedSchoolManagementIndexRoute: typeof AuthenticatedSchoolManagementIndexRoute
  AuthenticatedSettingIndexRoute: typeof AuthenticatedSettingIndexRoute
  AuthenticatedStudentAccountManagementIndexRoute: typeof AuthenticatedStudentAccountManagementIndexRoute
  AuthenticatedSubjectManagementIndexRoute: typeof AuthenticatedSubjectManagementIndexRoute
  AuthenticatedTeacherManagementIndexRoute: typeof AuthenticatedTeacherManagementIndexRoute
  AuthenticatedAttendanceGeneralIndexRoute: typeof AuthenticatedAttendanceGeneralIndexRoute
  AuthenticatedAttendanceSubjectIndexRoute: typeof AuthenticatedAttendanceSubjectIndexRoute
  AuthenticatedDataManagementBatchesIndexRoute: typeof AuthenticatedDataManagementBatchesIndexRoute
  AuthenticatedAttendanceGeneralGeneralAttendanceIdIndexRoute: typeof AuthenticatedAttendanceGeneralGeneralAttendanceIdIndexRoute
  AuthenticatedAttendanceSubjectSubjectAttendanceIdIndexRoute: typeof AuthenticatedAttendanceSubjectSubjectAttendanceIdIndexRoute
  AuthenticatedDataManagementBatchesBatchIdMajorsIndexRoute: typeof AuthenticatedDataManagementBatchesBatchIdMajorsIndexRoute
  AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsIndexRoute: typeof AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsIndexRoute
  AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsClassroomIdStudentsIndexRoute: typeof AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsClassroomIdStudentsIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedSchoolManagementIndexRoute:
    AuthenticatedSchoolManagementIndexRoute,
  AuthenticatedSettingIndexRoute: AuthenticatedSettingIndexRoute,
  AuthenticatedStudentAccountManagementIndexRoute:
    AuthenticatedStudentAccountManagementIndexRoute,
  AuthenticatedSubjectManagementIndexRoute:
    AuthenticatedSubjectManagementIndexRoute,
  AuthenticatedTeacherManagementIndexRoute:
    AuthenticatedTeacherManagementIndexRoute,
  AuthenticatedAttendanceGeneralIndexRoute:
    AuthenticatedAttendanceGeneralIndexRoute,
  AuthenticatedAttendanceSubjectIndexRoute:
    AuthenticatedAttendanceSubjectIndexRoute,
  AuthenticatedDataManagementBatchesIndexRoute:
    AuthenticatedDataManagementBatchesIndexRoute,
  AuthenticatedAttendanceGeneralGeneralAttendanceIdIndexRoute:
    AuthenticatedAttendanceGeneralGeneralAttendanceIdIndexRoute,
  AuthenticatedAttendanceSubjectSubjectAttendanceIdIndexRoute:
    AuthenticatedAttendanceSubjectSubjectAttendanceIdIndexRoute,
  AuthenticatedDataManagementBatchesBatchIdMajorsIndexRoute:
    AuthenticatedDataManagementBatchesBatchIdMajorsIndexRoute,
  AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsIndexRoute:
    AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsIndexRoute,
  AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsClassroomIdStudentsIndexRoute:
    AuthenticatedDataManagementBatchesBatchIdMajorsMajorIdClassroomsClassroomIdStudentsIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
